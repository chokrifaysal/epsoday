#!/usr/bin/env python3
import gdb
import re

class Exploitable(gdb.Command):
    def __init__(self):
        super(Exploitable, self).__init__("exploitable", gdb.COMMAND_USER)
        
    def invoke(self, arg, from_tty):
        try:
            frame = gdb.selected_frame()
            arch = frame.architecture()
            
            pc = int(gdb.parse_and_eval("$pc"))
            sp = int(gdb.parse_and_eval("$sp"))
            
            # basic checks
            siginfo = gdb.execute("info signals", to_string=True)
            if "SIGSEGV" in siginfo:
                fault_addr = gdb.parse_and_eval("$_siginfo._sifields._sigfault.si_addr")
                print(f"SIGSEGV at 0x{int(fault_addr):x}")
                
                # check if PC controlled
                if pc > 0x41414140 and pc < 0x41414150:
                    print("EXPLOITABLE: PC points to user-controlled data")
                    return
                    
                # check stack overflow
                if sp < 0x1000:
                    print("EXPLOITABLE: Stack overflow detected")
                    return
                    
            print("UNKNOWN: Need manual analysis")
            
        except Exception as e:
            print(f"ERROR: {e}")

Exploitable()
